openapi: '3.0.2'
info:
  title: Main server API
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000
paths:
  /register:
    post:
      tags:
        - user
      summary: Create user
      description: Registering a new user.
      operationId: createUser
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: false
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: false
        schema:
          type: string

      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
        '409':
          description: User with this login alredy exist
  /login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '403':
          description: Invalid username/password supplied
  /update:
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: JWT Access Token
          in: path
          description: Access token for this user
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: New password
          required: false
          schema:
            type: string
        - name: first name
          in: query
          description: First name
          required: false
          schema:
            type: string
        - name: last name
          in: query
          description: Last name
          required: false
          schema:
            type: string
        - name: birthdate
          in: query
          description: Birthday
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: User's email
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: User's phone
          required: false
          schema:
            type: string

      responses:
        '200':
          description: successful operation
        '403':
          description: Invalid access token
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: 'mannaya_kasha_228'
        password:
          type: string
          example: 'ahahahha'
        firstName:
          type: string
          example: Lavrenty
        lastName:
          type: string
          example: Grishin
        birthdate:
          type: string
          example: "21.11.2001"
        email:
          type: string
          example: lvgrishin@edu.hse.ru
        phone:
          type: string
          example: '8 (495) 952-88-33'
      xml:
        name: user
