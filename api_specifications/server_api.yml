openapi: '3.0.2'
info:
  title: Main server API
  version: '1.0'
servers:
  - url: http://127.0.0.1:5000
paths:
  /auth/register:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: user with this login alredy exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '402':
          description: invalid login or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/{username}:
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: 'mannaya_kasha_228'
        password:
          type: string
          example: 'ahahahha'
        firstName:
          type: string
          example: Lavrenty
        lastName:
          type: string
          example: Grishin
        birthdate:
          type: string
          example: "21.11.2001"
        email:
          type: string
          example: lvgrishin@edu.hse.ru
        phone:
          type: string
          example: '8 (495) 952-88-33'
      xml:
        name: user
